name: PIPELINE DEPLOY DOCKER E CLUSTER GKE

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [main ]
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GAR_LOCATION: us-central1  
  GKE_CLUSTER: ${{ secrets.GKE_CLUSTER }}   # TODO: update to cluster name
  GKE_ZONE: us-central1-c	   # TODO: update to cluster zone
  
jobs:

 build:

    runs-on: ubuntu-latest

    steps:

    - uses: actions/checkout@v2
    - name: login the Docker image
      run: docker login -u brunosantos88 -p ${{ secrets.DOCKER_TOKEN }}

    - name: Build the Docker App image
      run: docker build -t frontend app/.
      
    - name: Tag Docker frontend
      run: docker tag frontend brunosantos88/frontend
      
    - name: Push the Docker frontend
      run: docker push brunosantos88/frontend
 
 deploy:
  name: Deploy kubernetes GKE 
  runs-on: ubuntu-latest
  environment: hw-prod

  steps:
      # Git checkout
      - name: Checkout
        uses: actions/checkout@v2
  
   # Login to GCP
      - uses: google-github-actions/setup-gcloud@v0.2.0
        with:
         service_account_key: ${{ secrets.GCP_CREDENTIALS }}
         project_id: ${{ secrets.GCP_PROJECT_ID }}

  # Get the GKE token acesso ao cluster
      - name: Token acesso ao cluster
        run: ${{ secrets.GKE_TOKEN }}
 
      - name: Deploy frontend
        run: kubectl delete -f app-deployment.yml

  # Deploy GKE deploy bancodados cluster
      - name: Deploy banco-dados
        run: kubectl delete -f mysql-deployment.yml

  # Deploy GKE deploy LoadBalancer FrontEnd
      - name: Deploy Loadbalncer FrontEnd
        run: kubectl delete -f load-balancer.yml





    
  

    
    

    

